unit Manager;

interface

uses
  Manager.Interfaces,
  Manager.Types,
  System.Generics.Collections;

type
  TManager<T: class> = class(TInterfacedObject, iManager<T>)
  private
  public
    constructor Create;
    destructor Destroy; override;
    function New: iManager<T>;
    procedure Save(Entity: T);
    procedure Update(Entity: T);
    procedure Remove(Entity: T);
    function Find: TObjectList<T>; overload;
    function Find(ID: Variant): T; overload;
    function Find(AClass: TClass): iManager<T>; overload;
    function Where(Expression: TExpression): iManager<T>;
    function _And(Expression: TExpression): iManager<T>;
    function _Or(Expression: TExpression): iManager<T>;
    function Count: Integer;
  end;

implementation

end.
